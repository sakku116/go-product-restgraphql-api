input RegisterInput {
  username: String!
  password: String!
  email: String!
}

type RegisterResult {
  accessToken: String!
  refreshToken: String!
}

input LoginInput {
  username: String!
  password: String!
}

type LoginResult {
  accessToken: String!
  refreshToken: String!
}

input CheckTokenInput {
  accessToken: String!
}

type CheckTokenResult {
  uuid: ID!
  username: String!
  role: String!
  email: String!
}

input refreshTokenInput {
  refreshToken: String!
}

type refreshTokenResult {
  accessToken: String!
  refreshToken: String!
}

type Mutation {
  register(input: RegisterInput!): RegisterResult!
  login(input: LoginInput!): LoginResult!
  refreshToken(input: refreshTokenInput!): refreshTokenResult!
}

type Query {
  checkToken(input: CheckTokenInput!): CheckTokenResult!
}